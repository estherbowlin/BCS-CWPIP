// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/3.15/esri/copyright.txt and http://www.arcgis.com/apps/webappbuilder/copyright.txt for details.
//>>built
define("dojo/_base/declare dojo/_base/lang dojo/Deferred jimu/BaseWidgetSetting esri/tasks/query esri/tasks/QueryTask esri/geometry/Extent esri/geometry/geometryEngine esri/SpatialReference esri/geometry/webMercatorUtils dojo/_base/array".split(" "),function(t,m,n,u,v,w,x,p,q,y,r){return t([u],{baseClass:"jimu-widget-smartEditor-widgets-intersection",layerFieldsObj:{},queriedLayers:[],layersInvolvedInIgnoreLayerRanking:[],maxToleranceForlayer:{},maxToleranceForlayerInPx:{},completeFeatures:{},postCreate:function(){this.startup();
this.layerFieldsObj={};this.queriedLayers=[];this.maxToleranceForlayer={};this.maxToleranceForlayerInPx={};this.layersInvolvedInIgnoreLayerRanking=[];this.completeFeatures=[]},startup:function(){},_canGetGeodesicBuffers:function(a){var b;b=new q(4326);return a&&y.canProject(a,b)?!0:!1},_getbufferedGeometry:function(a,b){return(a=this._canGetGeodesicBuffers(a)?p.geodesicBuffer([a],[b],"meters",!0):p.buffer([a],[b],"meters",!0))&&0<a.length?a[0]:null},getToleranceValueInMeters:function(a){var b;b=0;
a&&(a.useDefault?(b=this.defaultToleranceSettings.value,a=this.defaultToleranceSettings.unit):(b=a.value,a=a.unit),b=this.convertToMeters(b,a));return b},setMaxToleranceForLayer:function(a,b){var c;c=this.getToleranceValueInMeters(b);if(b&&"px"===b.unit&&!b.useDefault){if(b=b.value,!this.maxToleranceForlayerInPx.hasOwnProperty(a)||this.maxToleranceForlayerInPx[a]<b)this.maxToleranceForlayerInPx[a]=b}else 0<c&&(!this.maxToleranceForlayer.hasOwnProperty(a)||this.maxToleranceForlayer[a]<c)?this.maxToleranceForlayer[a]=
c:0===c&&(b=this.defaultPixelsTolerance,!this.maxToleranceForlayerInPx.hasOwnProperty(a)||this.maxToleranceForlayerInPx[a]<b)&&(this.maxToleranceForlayerInPx[a]=b)},convertToMeters:function(a,b){var c=a;switch(b){case "meters":c=a;break;case "feet":c=.3048*a;break;case "kilometers":c=1E3*a;break;case "miles":c=1609.34*a}return c},getDistinctLayers:function(a,b){var c,e,f;e=new n;c=new n;f={};this.layerFieldsObj={};this.queriedLayers=[];this.ignoreLayerRanking=!1;this.drawnGeometry=b;if(a.fieldValues){for(var d in a.fieldValues){f[d]=
[];for(var g=0;g<a.fieldValues[d].length;g++){var k=a.fieldValues[d][g];if("Intersection"===k.actionName&&k.enabled){k.ignoreLayerRanking&&(this.ignoreLayerRanking=!0);for(var h=0;h<k.fields.length;h++){var l=k.fields[h];-1===f[d].indexOf(l.layerId)&&f[d].push(l.layerId);-1===this.layersInvolvedInIgnoreLayerRanking.indexOf(l.layerId)&&k.ignoreLayerRanking&&this.layersInvolvedInIgnoreLayerRanking.push(l.layerId);this.setMaxToleranceForLayer(l.layerId,l.toleranceSettings)}}}}this._getIntersectionsForEachField(f,
b,c)}else c.resolve({});c.then(m.hitch(this,function(){var b={},c;if(a.fieldValues)for(var d in a.fieldValues){b[d]={};for(var f=0;f<a.fieldValues[d].length;f++){var h=a.fieldValues[d][f];if("Intersection"===h.actionName&&h.enabled)if(h.ignoreLayerRanking)b[d]=this._getClosestFeature(h.fields);else for(var g=0;g<h.fields.length;g++){var l,k,m;k=h.fields[g];m=k.layerId;if(!b[d].hasOwnProperty(m)&&(l=this._getProcessedFeature(m,k.toleranceSettings))&&l.attributes){h=l.attributes;g={};g[k.field]=h[k.field];
b[d][m]=g;if(l.intersectingFeatures&&1<l.intersectingFeatures.length&&"esriCTUseLayerName"!==k.field){var n=[];r.forEach(l.intersectingFeatures,function(a){a=a.attributes[k.field];null!==a&&""!==a&&0>n.indexOf(a)&&n.push(a)});1<n.length&&(c||(c={}),c[d]=n)}break}}}}e.resolve({result:b,multipleValues:c})}));return e.promise},_getIntersectingFeatures:function(a,b){var c,e,f,d;c=[];f=0;if(this.completeFeatures.hasOwnProperty(a)&&(d=this.completeFeatures[a],b&&"px"!==b.unit&&(f=this.getToleranceValueInMeters(b)),
0<d.length&&(f?e=this._getbufferedGeometry(this.drawnGeometry,f):this.maxToleranceForlayer.hasOwnProperty(a)&&this.maxToleranceForlayer[a]||this.maxToleranceForlayerInPx.hasOwnProperty(a)&&this.maxToleranceForlayerInPx[a]?e="point"===this.drawnGeometry.type?this.maxToleranceForlayerInPx.hasOwnProperty(a)?this.pointToExtent(this.map,this.drawnGeometry,this.maxToleranceForlayerInPx[a]):this.pointToExtent(this.map,this.drawnGeometry,this.defaultPixelsTolerance):this.drawnGeometry:c=d,e)))for(a=0;a<d.length;a++)b=
d[a],b.geometry&&p.intersects(e,b.geometry)&&c.push(b);return c},_getClosestFeature:function(a){var b,c,e,f,d,g=[],k;b={};for(f=0;f<a.length;f++){var h=[];e=a[f].layerId;h=this._getIntersectingFeatures(e,a[f].toleranceSettings);for(d=0;d<h.length;d++)this.drawnGeometry&&h[d].geometry&&(h[d].distanceToLocation=p.distance(this.drawnGeometry,h[d].geometry,"meters")),h[d].layerId=e,h[d].fields?h[d].fields.push(a[f].field):h[d].fields=[a[f].field];g=g.concat(h)}0<g.length&&(g.sort(function(a,b){return a.distanceToLocation<
b.distanceToLocation?-1:a.distanceToLocation>b.distanceToLocation?1:0}),c=g[0].attributes,a=this._jimuLayerInfos.getLayerOrTableInfoById(g[0].layerId).layerObject,c.esriCTUseLayerName=a.name,k={},r.forEach(g[0].fields,function(a){k[a]=c[a]}),b[g[0].layerId]=k);return b},_getProcessedFeature:function(a,b){var c,e;e=[];e=this._getIntersectingFeatures(a,b);0<e.length&&(c=e[0].attributes,a=this._jimuLayerInfos.getLayerOrTableInfoById(a).layerObject,c.esriCTUseLayerName=a.name);return{attributes:c,intersectingFeatures:e}},
_getIntersectionsForEachField:function(a,b,c){var e,f;e=Object.keys(a);f=0;this.maxToleranceForlayer&&(f=Object.keys(this.maxToleranceForlayer).length);if(0<e.length){var d=e[0];(this.ignoreLayerRanking||0<f?this._asyncIntersectionRequests(a[d],b):this._syncIntersectionRequests(a[d],b)).then(m.hitch(this,function(){this.ignoreLayerRanking||0<f?a[d]&&0===a[d].length&&delete a[d]:delete a[d];this._getIntersectionsForEachField(a,b,c)}))}else c.resolve()},_filterQueriedLayers:function(a){for(var b in this.layerFieldsObj){var c=
a.indexOf(b);-1<c&&a.splice(c,1)}return a},_asyncIntersectionRequests:function(a,b,c){c||(c=new n);a=this._filterQueriedLayers(a);0<a.length?this._getIntersectedFeatures(a[0],b).then(m.hitch(this,function(e){a.splice(0,1);0<a.length?(this._asyncIntersectionRequests(a,b,c),this._intersectionResult(e)):this._intersectionResult(e,c)})):c.resolve();return c.promise},_syncIntersectionRequests:function(a,b,c){c||(c=new n);a=this._filterQueriedLayers(a);0<a.length?this._getIntersectedFeatures(a[0],b).then(m.hitch(this,
function(e){0<e.features.length?this._intersectionResult(e,c):(a.splice(0,1),0<a.length?this._syncIntersectionRequests(a,b,c):this._intersectionResult(e,c))})):c.resolve();return c.promise},_intersectionResult:function(a,b){a.layerId&&(this.layerFieldsObj[a.layerId]={},a.features&&0<a.features.length&&(this.layerFieldsObj[a.layerId]=a.featuresAttributes));b&&b.resolve()},pointToExtent:function(a,b,c){if(0===c)return b;var e=a.extent.getWidth()/a.width;c*=e;return new x(b.x-c,b.y-c,b.x+c,b.y+c,a.spatialReference)},
_getAppropriateGeometryForQuery:function(a,b){var c;this.maxToleranceForlayer.hasOwnProperty(a)?c=this._getbufferedGeometry(b,this.maxToleranceForlayer[a]):(c=b,"point"===b.type&&(c=this.maxToleranceForlayerInPx.hasOwnProperty(a)?this.pointToExtent(this.map,b,this.maxToleranceForlayerInPx[a]):this.pointToExtent(this.map,b,this.defaultPixelsTolerance)));return c},_getIntersectedFeatures:function(a,b){var c,e,f,d,g,k;c=new n;if(this._jimuLayerInfos.getLayerOrTableInfoById(a))g=this._jimuLayerInfos.getLayerOrTableInfoById(a).layerObject;
else return c.resolve({layerId:a,features:[],featuresAttributes:{}}),c.promise;k=g.objectIdField;e=new v;f=new w(g.url);e.geometry=this._getAppropriateGeometryForQuery(a,b);e.outFields=["*"];if(g=g.getDefinitionExpression())e.where=g;-1<this.layersInvolvedInIgnoreLayerRanking.indexOf(a)||this.maxToleranceForlayer.hasOwnProperty(a)||this.maxToleranceForlayerInPx.hasOwnProperty(a)?(e.returnGeometry=!0,e.outSpatialReference=new q(b.spatialReference.toJson())):e.returnGeometry=!1;f.execute(e,m.hitch(this,
function(b){b&&b.features&&0<b.features.length?(b.features.sort(function(a,b){a=parseInt(a.attributes[k],10);b=parseInt(b.attributes[k],10);return a<b?1:0}),d=b.features[0].attributes):(b={features:[]},d={});this.completeFeatures[a]=b.features;c.resolve({layerId:a,features:b.features,featuresAttributes:d})}),m.hitch(this,function(){this.completeFeatures[a]=[];c.resolve({layerId:a,features:[],featuresAttributes:{}})}));return c.promise}})});